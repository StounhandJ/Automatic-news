version: "3.7"

volumes:
  mongodb_volume:
      name: mongo
  logs:
      name: logs


services:

  parser:
    build: ./parser/
    restart: always
    environment:
       DOCKER: "true"
       MONGO_HOST: mongodb
       MONGO_DATABASE: ${DATABASE}
       MONGO_COLLECTION: ${DATABASE_COLLECTION}
    depends_on:
      - mongodb
    container_name: news_parser

  slim:
    build: ./news/
    restart: always
    tty: true
    environment:
        docker: "true"
        MONGO_HOST: mongodb
        MONGO_DATABASE: ${DATABASE}
        MONGO_COLLECTION: ${DATABASE_COLLECTION}
    # ports:
    #     - 8080:8000
    volumes:
        - logs:/news/var/www/logs
    depends_on:
        - mongodb
    container_name: news_site

  mongodb:
    image: mongo:latest
    restart: always
#    ports:
#      - 27017:27017
    volumes:
      - mongodb_volume:/data/db
    container_name: news_mongo

  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./news/public:/var/www/public
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - slim

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
