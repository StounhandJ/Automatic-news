version: "3.7"

volumes:
  mongodb_volume:
      name: mongo
  redis_volume:
  logs:
      name: logs


services:

  webpack_mix:
    build:
      context: ./site/
      dockerfile: DockerfileWebpack
    tty: true
    volumes:
        - ./site/public:/var/app/public
    container_name: webpack_mix

  parser:
    build: ./parser/
    restart: always
    environment:
       DOCKER: "true"
       MONGO_HOST: mongodb
       MONGO_DATABASE: ${DATABASE}
       MONGO_COLLECTION: ${DATABASE_COLLECTION}
       TELEGRAM_HOST: telegram
    depends_on:
      - mongodb
      - telegram
    container_name: news_parser

  telegram:
    build: ./telegram/
    restart: always
    environment:
       DOCKER: "true"
       CHANNEL_ID: ${CHANNEL_ID}
       TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}
       REDIS_HOST: redis
       POST_ARTICLE_EVERY_SECONDS: ${POST_ARTICLE_EVERY_SECONDS}
    depends_on:
      - redis
    container_name: telegram

  redis:
    image: "redis:alpine"
    volumes:
     - redis_volume:/var/lib/redis
    container_name: redis

  news_site:
    build: ./site/
    restart: always
    tty: true
    environment:
        docker: "true"
        APP_DEBUG: "true"
        APP_URL: ${DOMAIN}
        DB_HOST: mongodb
        DB_DATABASE: ${DATABASE}
        MONGO_COLLECTION: ${DATABASE_COLLECTION}
    # ports:
    #     - 8080:8000
    volumes:
        - logs:/site/storage/logs
    depends_on:
        - mongodb
    container_name: news_site

  mongodb:
    image: mongo:latest
    restart: always
#    ports:
#      - 27017:27017
    volumes:
      - mongodb_volume:/data/db
    container_name: news_mongo

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    command: ["/bin/sh", "-c", "set -eu && envsubst '$$DOMAIN, $$BACK_END' < /etc/nginx/conf.d/app.conf.template > /etc/nginx/conf.d/app.conf && nginx -g 'daemon off;' && while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'"]
    environment:
       DOMAIN: ${DOMAIN}
       BACK_END: news_site
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./site/public:/var/www/public
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - news_site
      - webpack_mix

  certbot:
    image: certbot/dns-cloudflare
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --dns-cloudflare-credentials /cloudflare.ini; sleep 3d & wait $${!}; done;'"
    volumes:
      - ./data/certbot/cloudflare.ini:/opt/cerbot/cloudflare.ini
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
